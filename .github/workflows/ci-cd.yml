name: CI/CD for Spring Boot with Maven

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: packaged-application
          path: target/*.jar

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: |
          cd frontend/webservice
          npm install

      - name: Build Project
        run: |
          cd frontend/webservice
          npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: packaged-application
          path: target/

      - name: Setup key
        id: setup-key
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          echo "$DEPLOY_KEY" >> $HOME/key.pem
          chmod 400 $HOME/key.pem

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_KEY }}
          source: "target/*.jar"
          target: "/home/ubuntu/deployment/"

      - name: Copy Frontend to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ubuntu
          key: ${{ secrets.DEPLOY_KEY }}
          source: "frontend/webservice/build/*"
          target: "/home/ubuntu/deployment/"

      - name: Connect SSH and Restart Services
        run: |
          ssh -o StrictHostKeyChecking=no -i $HOME/key.pem ubuntu@${{ secrets.DEPLOY_HOST }} '
            sudo systemctl restart demo &&
            sudo systemctl restart nginx
          '